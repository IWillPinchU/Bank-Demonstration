server:
  port: 8080

spring:
  application:
    name: accounts
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: admin
    password:
  h2:
    console:
      enabled: true
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
  config:
    import: "optional:configserver:http://localhost:8071/"
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
    function:
      definition: updateCommunication
    stream:
      bindings:
        sendCommunication-out-0:
          destination: send-communication
        updateCommunication-in-0:
          destination: communication-sent
          group: ${spring.application.name}
      kafka:
        binder:
          brokers:
            - localhost:9092
    kubernetes:
      discovery:
        all-namespaces: true

resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 10
        failureRateThreshold: 50
        permittedNumberOfCallsInHalfOpenState: 2
        waitDurationInOpenState: 10000
  retry:
    configs:
      default:
        max-attempts: 3
        wait-duration: 500
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 2
  ratelimiter:
    configs:
      default:
        timeout-duration: 1000
        limit-refresh-period: 5000
        limit-for-period: 1

info:
  app:
    name: "accounts"
    description: "Big Bank Accounts Application"
    version: "8.0.0"

logging:
  level:
    com:
      iwillpinchu:
        accounts: DEBUG\
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      access: unrestricted
    health:
      probes:
        enabled: true
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}


